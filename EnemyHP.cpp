//=============================================================================
//
// EnemyHP処理 [EnemyHP.cpp]
// Author : 宋彦霖
//
//=============================================================================
#include "EnemyHP.h"

#include "Library/DebugProcess.h"

#include "enemyRE.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// クラス定義
//*****************************************************************************
void EnemyHP::SetUse(bool use)
{
	this->use = use;
}

void EnemyHP::Enable(void)
{
	SetUse(TRUE);
}

void EnemyHP::Disable(void)
{
	SetUse(FALSE);
}

bool EnemyHP::GetUse(void)
{
	return this->use;
}

void EnemyHP::Initial(void)
{
	this->LoadTexture("data/TEXTURE/UI/enemyHP.png");
	this->MakeVertex();
}

//*****************************************************************************
// グローバル変数
//*****************************************************************************
EnemyHP EnemyHPWk[ENEMY_MAX];

//=============================================================================
// 取得
//=============================================================================
EnemyHP *GetEnemyHP(int no)
{
	return &EnemyHPWk[no];
}

//=============================================================================
// 終了処理
//=============================================================================
void UninitEnemyHP(void)
{
	EnemyHP *e = GetEnemyHP(0);

	for (int i = 0; i < ENEMY_MAX; i++)
	{
		(e + i)->Release();

	}
}

//=============================================================================
// 描画処理
//=============================================================================
void DrawEnemyHP(void)
{
	EnemyHP *e = GetEnemyHP(0);

	for (int i = 0; i < ENEMY_MAX; i++)
	{
		if ((e + i)->GetUse() == TRUE)
		{
			(e + i)->Draw();
		}
	}
}

//=============================================================================
// 更新処理
//=============================================================================
void UpdateEnemyHP(void)
{
	for (int i = 0; i < ENEMY_MAX; i++)
	{

	}
}

//=============================================================================
// セット処理
//=============================================================================
void SetEnemyHP(int no)
{
	
}